//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskClientPC.TaskyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskClientPC.TaskyServiceReference.Shift))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskClientPC.TaskyServiceReference.Assignment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskClientPC.TaskyServiceReference.UserInShift))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskClientPC.TaskyServiceReference.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskClientPC.TaskyServiceReference.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shift", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Shift : TaskClientPC.TaskyServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string shiftNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime stratField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end {
            get {
                return this.endField;
            }
            set {
                if ((this.endField.Equals(value) != true)) {
                    this.endField = value;
                    this.RaisePropertyChanged("end");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string shiftName {
            get {
                return this.shiftNameField;
            }
            set {
                if ((object.ReferenceEquals(this.shiftNameField, value) != true)) {
                    this.shiftNameField = value;
                    this.RaisePropertyChanged("shiftName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime strat {
            get {
                return this.stratField;
            }
            set {
                if ((this.stratField.Equals(value) != true)) {
                    this.stratField = value;
                    this.RaisePropertyChanged("strat");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Assignment", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Assignment : TaskClientPC.TaskyServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateOfAssigmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskClientPC.TaskyServiceReference.User doneByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskClientPC.TaskyServiceReference.User forUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string summeryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateOfAssigment {
            get {
                return this.dateOfAssigmentField;
            }
            set {
                if ((this.dateOfAssigmentField.Equals(value) != true)) {
                    this.dateOfAssigmentField = value;
                    this.RaisePropertyChanged("dateOfAssigment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskClientPC.TaskyServiceReference.User doneByUser {
            get {
                return this.doneByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.doneByUserField, value) != true)) {
                    this.doneByUserField = value;
                    this.RaisePropertyChanged("doneByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskClientPC.TaskyServiceReference.User forUser {
            get {
                return this.forUserField;
            }
            set {
                if ((object.ReferenceEquals(this.forUserField, value) != true)) {
                    this.forUserField = value;
                    this.RaisePropertyChanged("forUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                if ((object.ReferenceEquals(this.subjectField, value) != true)) {
                    this.subjectField = value;
                    this.RaisePropertyChanged("subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string summery {
            get {
                return this.summeryField;
            }
            set {
                if ((object.ReferenceEquals(this.summeryField, value) != true)) {
                    this.summeryField = value;
                    this.RaisePropertyChanged("summery");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInShift", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class UserInShift : TaskClientPC.TaskyServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskClientPC.TaskyServiceReference.Shift _shiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskClientPC.TaskyServiceReference.User _userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isClockedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isClockedOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime userClockInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime userClockOutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskClientPC.TaskyServiceReference.Shift _shift {
            get {
                return this._shiftField;
            }
            set {
                if ((object.ReferenceEquals(this._shiftField, value) != true)) {
                    this._shiftField = value;
                    this.RaisePropertyChanged("_shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskClientPC.TaskyServiceReference.User _user {
            get {
                return this._userField;
            }
            set {
                if ((object.ReferenceEquals(this._userField, value) != true)) {
                    this._userField = value;
                    this.RaisePropertyChanged("_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isClockedIn {
            get {
                return this.isClockedInField;
            }
            set {
                if ((this.isClockedInField.Equals(value) != true)) {
                    this.isClockedInField = value;
                    this.RaisePropertyChanged("isClockedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isClockedOut {
            get {
                return this.isClockedOutField;
            }
            set {
                if ((this.isClockedOutField.Equals(value) != true)) {
                    this.isClockedOutField = value;
                    this.RaisePropertyChanged("isClockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime userClockIn {
            get {
                return this.userClockInField;
            }
            set {
                if ((this.userClockInField.Equals(value) != true)) {
                    this.userClockInField = value;
                    this.RaisePropertyChanged("userClockIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime userClockOut {
            get {
                return this.userClockOutField;
            }
            set {
                if ((this.userClockOutField.Equals(value) != true)) {
                    this.userClockOutField = value;
                    this.RaisePropertyChanged("userClockOut");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Category : TaskClientPC.TaskyServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : TaskClientPC.TaskyServiceReference.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime birthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaskClientPC.TaskyServiceReference.UserType userTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime birthday {
            get {
                return this.birthdayField;
            }
            set {
                if ((this.birthdayField.Equals(value) != true)) {
                    this.birthdayField = value;
                    this.RaisePropertyChanged("birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaskClientPC.TaskyServiceReference.UserType userType {
            get {
                return this.userTypeField;
            }
            set {
                if ((this.userTypeField.Equals(value) != true)) {
                    this.userTypeField = value;
                    this.RaisePropertyChanged("userType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShiftManager = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Worker = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<TaskClientPC.TaskyServiceReference.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AssignmentList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Assignment")]
    [System.SerializableAttribute()]
    public class AssignmentList : System.Collections.Generic.List<TaskClientPC.TaskyServiceReference.Assignment> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserInShiftList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="UserInShift")]
    [System.SerializableAttribute()]
    public class UserInShiftList : System.Collections.Generic.List<TaskClientPC.TaskyServiceReference.UserInShift> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CategoryList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Category")]
    [System.SerializableAttribute()]
    public class CategoryList : System.Collections.Generic.List<TaskClientPC.TaskyServiceReference.Category> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaskyServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserLogin", ReplyAction="http://tempuri.org/IUserService/UserLoginResponse")]
        TaskClientPC.TaskyServiceReference.User UserLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserLogin", ReplyAction="http://tempuri.org/IUserService/UserLoginResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.User> UserLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewUser", ReplyAction="http://tempuri.org/IUserService/NewUserResponse")]
        TaskClientPC.TaskyServiceReference.User NewUser(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewUser", ReplyAction="http://tempuri.org/IUserService/NewUserResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.User> NewUserAsync(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        bool UpdateUser(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        bool DeleteUser(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsEmailFree", ReplyAction="http://tempuri.org/IUserService/IsEmailFreeResponse")]
        bool IsEmailFree(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsEmailFree", ReplyAction="http://tempuri.org/IUserService/IsEmailFreeResponse")]
        System.Threading.Tasks.Task<bool> IsEmailFreeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersbyType", ReplyAction="http://tempuri.org/IUserService/GetUsersbyTypeResponse")]
        TaskClientPC.TaskyServiceReference.UserList GetUsersbyType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersbyType", ReplyAction="http://tempuri.org/IUserService/GetUsersbyTypeResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserList> GetUsersbyTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShift", ReplyAction="http://tempuri.org/IUserService/GetShiftResponse")]
        TaskClientPC.TaskyServiceReference.Shift GetShift(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetShift", ReplyAction="http://tempuri.org/IUserService/GetShiftResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Shift> GetShiftAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewShift", ReplyAction="http://tempuri.org/IUserService/NewShiftResponse")]
        TaskClientPC.TaskyServiceReference.Shift NewShift(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewShift", ReplyAction="http://tempuri.org/IUserService/NewShiftResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Shift> NewShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateShift", ReplyAction="http://tempuri.org/IUserService/UpdateShiftResponse")]
        bool UpdateShift(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateShift", ReplyAction="http://tempuri.org/IUserService/UpdateShiftResponse")]
        System.Threading.Tasks.Task<bool> UpdateShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteShift", ReplyAction="http://tempuri.org/IUserService/DeleteShiftResponse")]
        bool DeleteShift(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteShift", ReplyAction="http://tempuri.org/IUserService/DeleteShiftResponse")]
        System.Threading.Tasks.Task<bool> DeleteShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAssignmentsBySubject", ReplyAction="http://tempuri.org/IUserService/GetAssignmentsBySubjectResponse")]
        TaskClientPC.TaskyServiceReference.Assignment GetAssignmentsBySubject(string Subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAssignmentsBySubject", ReplyAction="http://tempuri.org/IUserService/GetAssignmentsBySubjectResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Assignment> GetAssignmentsBySubjectAsync(string Subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAssignmentsByCategory", ReplyAction="http://tempuri.org/IUserService/GetAssignmentsByCategoryResponse")]
        TaskClientPC.TaskyServiceReference.AssignmentList GetAssignmentsByCategory(string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAssignmentsByCategory", ReplyAction="http://tempuri.org/IUserService/GetAssignmentsByCategoryResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.AssignmentList> GetAssignmentsByCategoryAsync(string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewAssignment", ReplyAction="http://tempuri.org/IUserService/NewAssignmentResponse")]
        TaskClientPC.TaskyServiceReference.Assignment NewAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewAssignment", ReplyAction="http://tempuri.org/IUserService/NewAssignmentResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Assignment> NewAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAssignment", ReplyAction="http://tempuri.org/IUserService/UpdateAssignmentResponse")]
        bool UpdateAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateAssignment", ReplyAction="http://tempuri.org/IUserService/UpdateAssignmentResponse")]
        System.Threading.Tasks.Task<bool> UpdateAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAssignment", ReplyAction="http://tempuri.org/IUserService/DeleteAssignmentResponse")]
        bool DeleteAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteAssignment", ReplyAction="http://tempuri.org/IUserService/DeleteAssignmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersInShift", ReplyAction="http://tempuri.org/IUserService/GetUsersInShiftResponse")]
        TaskClientPC.TaskyServiceReference.UserInShiftList GetUsersInShift();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersInShift", ReplyAction="http://tempuri.org/IUserService/GetUsersInShiftResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShiftList> GetUsersInShiftAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetByUser", ReplyAction="http://tempuri.org/IUserService/GetByUserResponse")]
        TaskClientPC.TaskyServiceReference.UserInShift GetByUser(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetByUser", ReplyAction="http://tempuri.org/IUserService/GetByUserResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShift> GetByUserAsync(TaskClientPC.TaskyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewUserInShift", ReplyAction="http://tempuri.org/IUserService/NewUserInShiftResponse")]
        TaskClientPC.TaskyServiceReference.UserInShift NewUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewUserInShift", ReplyAction="http://tempuri.org/IUserService/NewUserInShiftResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShift> NewUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserInShift", ReplyAction="http://tempuri.org/IUserService/UpdateUserInShiftResponse")]
        bool UpdateUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserInShift", ReplyAction="http://tempuri.org/IUserService/UpdateUserInShiftResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserInShift", ReplyAction="http://tempuri.org/IUserService/DeleteUserInShiftResponse")]
        bool DeleteUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserInShift", ReplyAction="http://tempuri.org/IUserService/DeleteUserInShiftResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCategories", ReplyAction="http://tempuri.org/IUserService/GetCategoriesResponse")]
        TaskClientPC.TaskyServiceReference.CategoryList GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCategories", ReplyAction="http://tempuri.org/IUserService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.CategoryList> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetByName", ReplyAction="http://tempuri.org/IUserService/GetByNameResponse")]
        TaskClientPC.TaskyServiceReference.Category GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetByName", ReplyAction="http://tempuri.org/IUserService/GetByNameResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Category> GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewCategory", ReplyAction="http://tempuri.org/IUserService/NewCategoryResponse")]
        TaskClientPC.TaskyServiceReference.Category NewCategory(TaskClientPC.TaskyServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/NewCategory", ReplyAction="http://tempuri.org/IUserService/NewCategoryResponse")]
        System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Category> NewCategoryAsync(TaskClientPC.TaskyServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateCategory", ReplyAction="http://tempuri.org/IUserService/UpdateCategoryResponse")]
        bool UpdateCategory(TaskClientPC.TaskyServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateCategory", ReplyAction="http://tempuri.org/IUserService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(TaskClientPC.TaskyServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteCategory", ReplyAction="http://tempuri.org/IUserService/DeleteCategoryResponse")]
        bool DeleteCategory(TaskClientPC.TaskyServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteCategory", ReplyAction="http://tempuri.org/IUserService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryAsync(TaskClientPC.TaskyServiceReference.Category category);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : TaskClientPC.TaskyServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<TaskClientPC.TaskyServiceReference.IUserService>, TaskClientPC.TaskyServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TaskClientPC.TaskyServiceReference.User UserLogin(string email, string password) {
            return base.Channel.UserLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.User> UserLoginAsync(string email, string password) {
            return base.Channel.UserLoginAsync(email, password);
        }
        
        public TaskClientPC.TaskyServiceReference.User NewUser(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.NewUser(user);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.User> NewUserAsync(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.NewUserAsync(user);
        }
        
        public bool UpdateUser(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool DeleteUser(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public bool IsEmailFree(string email) {
            return base.Channel.IsEmailFree(email);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmailFreeAsync(string email) {
            return base.Channel.IsEmailFreeAsync(email);
        }
        
        public TaskClientPC.TaskyServiceReference.UserList GetUsersbyType(string type) {
            return base.Channel.GetUsersbyType(type);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserList> GetUsersbyTypeAsync(string type) {
            return base.Channel.GetUsersbyTypeAsync(type);
        }
        
        public TaskClientPC.TaskyServiceReference.Shift GetShift(string name) {
            return base.Channel.GetShift(name);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Shift> GetShiftAsync(string name) {
            return base.Channel.GetShiftAsync(name);
        }
        
        public TaskClientPC.TaskyServiceReference.Shift NewShift(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.NewShift(shift);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Shift> NewShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.NewShiftAsync(shift);
        }
        
        public bool UpdateShift(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.UpdateShift(shift);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.UpdateShiftAsync(shift);
        }
        
        public bool DeleteShift(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.DeleteShift(shift);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteShiftAsync(TaskClientPC.TaskyServiceReference.Shift shift) {
            return base.Channel.DeleteShiftAsync(shift);
        }
        
        public TaskClientPC.TaskyServiceReference.Assignment GetAssignmentsBySubject(string Subject) {
            return base.Channel.GetAssignmentsBySubject(Subject);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Assignment> GetAssignmentsBySubjectAsync(string Subject) {
            return base.Channel.GetAssignmentsBySubjectAsync(Subject);
        }
        
        public TaskClientPC.TaskyServiceReference.AssignmentList GetAssignmentsByCategory(string Category) {
            return base.Channel.GetAssignmentsByCategory(Category);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.AssignmentList> GetAssignmentsByCategoryAsync(string Category) {
            return base.Channel.GetAssignmentsByCategoryAsync(Category);
        }
        
        public TaskClientPC.TaskyServiceReference.Assignment NewAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.NewAssignment(assignment);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Assignment> NewAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.NewAssignmentAsync(assignment);
        }
        
        public bool UpdateAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.UpdateAssignment(assignment);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.UpdateAssignmentAsync(assignment);
        }
        
        public bool DeleteAssignment(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.DeleteAssignment(assignment);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAssignmentAsync(TaskClientPC.TaskyServiceReference.Assignment assignment) {
            return base.Channel.DeleteAssignmentAsync(assignment);
        }
        
        public TaskClientPC.TaskyServiceReference.UserInShiftList GetUsersInShift() {
            return base.Channel.GetUsersInShift();
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShiftList> GetUsersInShiftAsync() {
            return base.Channel.GetUsersInShiftAsync();
        }
        
        public TaskClientPC.TaskyServiceReference.UserInShift GetByUser(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.GetByUser(user);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShift> GetByUserAsync(TaskClientPC.TaskyServiceReference.User user) {
            return base.Channel.GetByUserAsync(user);
        }
        
        public TaskClientPC.TaskyServiceReference.UserInShift NewUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.NewUserInShift(user);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.UserInShift> NewUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.NewUserInShiftAsync(user);
        }
        
        public bool UpdateUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.UpdateUserInShift(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.UpdateUserInShiftAsync(user);
        }
        
        public bool DeleteUserInShift(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.DeleteUserInShift(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserInShiftAsync(TaskClientPC.TaskyServiceReference.UserInShift user) {
            return base.Channel.DeleteUserInShiftAsync(user);
        }
        
        public TaskClientPC.TaskyServiceReference.CategoryList GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.CategoryList> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public TaskClientPC.TaskyServiceReference.Category GetByName(string name) {
            return base.Channel.GetByName(name);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Category> GetByNameAsync(string name) {
            return base.Channel.GetByNameAsync(name);
        }
        
        public TaskClientPC.TaskyServiceReference.Category NewCategory(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.NewCategory(category);
        }
        
        public System.Threading.Tasks.Task<TaskClientPC.TaskyServiceReference.Category> NewCategoryAsync(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.NewCategoryAsync(category);
        }
        
        public bool UpdateCategory(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public bool DeleteCategory(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.DeleteCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryAsync(TaskClientPC.TaskyServiceReference.Category category) {
            return base.Channel.DeleteCategoryAsync(category);
        }
    }
}
